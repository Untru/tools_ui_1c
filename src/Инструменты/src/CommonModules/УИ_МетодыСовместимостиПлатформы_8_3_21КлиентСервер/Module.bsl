//В модуль вынесены конструкторы и методы, 
//использование которых было добавлено или изменено в платформе 8.3.21
//


#Область ПрограммныйИнтерфейс

// Новый защищенное соединение open SSL.
// 
// Возвращаемое значение:
//  ЗащищенноеСоединениеOpenSSL -  Новый защищенное соединение open SSL
Функция НовыйЗащищенноеСоединениеOpenSSL() Экспорт
	//@skip-check type-not-defined
	Возврат Новый ЗащищенноеСоединениеOpenSSL;	
КонецФункции

// Новый HTTPСоединение.
// 
// Параметры:
//  Сервер -Строка -Сервер
//  Порт - Неопределено, Число -  Порт
//  Пользователь - Неопределено, Строка -  Пользователь
//  Пароль - Неопределено, Строка -  Пароль
//  НастройкаПрокси - Неопределено, ИнтернетПрокси -  Настройка прокси
//  Таймаут - Число -  Таймаут
//  ЗащищенноеСоединение - Неопределено, ЗащищенноеСоединениеOpenSSL -  Защищенное соединение
//  ИспользоватьАутентификациюОС - Неопределено, Булево -  Использовать аутентификацию ОС
// 
// Возвращаемое значение:
//  HTTPСоединение -  Новый HTTPСоединение
//@skip-check method-too-many-params
Функция НовыйHTTPСоединение(Сервер, Порт = Неопределено, Пользователь = Неопределено, Пароль = Неопределено,
	НастройкаПрокси = Неопределено, Таймаут = 0, ЗащищенноеСоединение = Неопределено,
	ИспользоватьАутентификациюОС = Неопределено) Экспорт  
	
	Если ЗащищенноеСоединение = Неопределено Тогда
		ЗащищенноеСоединениеДляКонструктора = ЗащищенноеСоединение;
	Иначе            
		Если УИ_ОбщегоНазначенияКлиентСервер.ЭтоВебКлиент() Тогда
			ЗащищенноеСоединениеДляКонструктора = Истина;	         
		Иначе
			ЗащищенноеСоединениеДляКонструктора = ЗащищенноеСоединение;
		КонецЕсли;
	КонецЕсли;
	
	Если ИспользоватьАутентификациюОС = Неопределено Тогда
		//@skip-check type-not-defined
		СоединениеHTTP = Новый HTTPСоединение(Сервер, Порт, Пользователь, Пароль, НастройкаПрокси, Таймаут,
			ЗащищенноеСоединениеДляКонструктора);
	Иначе
		//@skip-check type-not-defined
		СоединениеHTTP = Новый HTTPСоединение(Сервер, Порт, Пользователь, Пароль, НастройкаПрокси, Таймаут,
			ЗащищенноеСоединениеДляКонструктора, ИспользоватьАутентификациюОС);
	КонецЕсли;
	
	Возврат СоединениеHTTP;
КонецФункции

// Новый HTTPЗапрос.
// 
// Параметры:
//  АдресРесурса - Строка - Адрес ресурса
//  Заголовки - Соответствие из КлючИЗначение,Неопределено -  Заголовки
// 
// Возвращаемое значение:
//  HTTPЗапрос - Новый HTTPЗапрос
Функция НовыйHTTPЗапрос(АдресРесурса, Заголовки = Неопределено) Экспорт
	//@skip-check type-not-defined
	Возврат Новый HTTPЗапрос(АдресРесурса, Заголовки);
КонецФункции

// Кодировка текста по имени.
// 
// Параметры:
//  Имя - Строка- Имя
// 
// Возвращаемое значение:
//  КодировкаТекста
Функция КодировкаТекстаПоИмени(Имя) Экспорт
	//@skip-check Undefined variable
	Возврат КодировкаТекста[Имя];
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Код процедур и функций

#КонецОбласти
